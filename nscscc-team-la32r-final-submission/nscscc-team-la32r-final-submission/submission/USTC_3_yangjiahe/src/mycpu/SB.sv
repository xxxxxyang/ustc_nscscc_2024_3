// Generated by CIRCT firtool-1.62.0
module SB(
  input         clock,
                reset,
  output        io_full,
  input  [31:0] io_addr_ex,
  input  [4:0]  io_mem_type_ex,
  input  [31:0] io_st_data_ex,
  input         io_uncache_ex,
  input  [1:0]  io_st_num,
  input         io_flush,
                io_dcache_miss,
  output [31:0] io_data_out,
                io_addr_out,
  output        io_uncache_out,
  output [4:0]  io_mem_type_out,
  output        io_wb_valid,
  output [31:0] io_ld_data_mem,
  output        io_ld_hit_0,
                io_ld_hit_1,
                io_ld_hit_2,
                io_ld_hit_3,
  input         io_em_stall
);

  reg  [31:0]      sb_addr_0;
  reg  [31:0]      sb_addr_1;
  reg  [31:0]      sb_addr_2;
  reg  [31:0]      sb_addr_3;
  reg  [31:0]      sb_data_0;
  reg  [31:0]      sb_data_1;
  reg  [31:0]      sb_data_2;
  reg  [31:0]      sb_data_3;
  reg  [4:0]       sb_mem_type_0;
  reg  [4:0]       sb_mem_type_1;
  reg  [4:0]       sb_mem_type_2;
  reg  [4:0]       sb_mem_type_3;
  reg  [3:0]       sb_wstrb_0;
  reg  [3:0]       sb_wstrb_1;
  reg  [3:0]       sb_wstrb_2;
  reg  [3:0]       sb_wstrb_3;
  reg              sb_uncache_0;
  reg              sb_uncache_1;
  reg              sb_uncache_2;
  reg              sb_uncache_3;
  reg  [1:0]       head;
  reg  [1:0]       tail;
  reg  [2:0]       wait_num;
  reg  [2:0]       elem_num;
  reg              flush_reg;
  wire [3:0][31:0] _GEN = {{sb_addr_3}, {sb_addr_2}, {sb_addr_1}, {sb_addr_0}};
  wire [3:0][31:0] _GEN_0 = {{sb_data_3}, {sb_data_2}, {sb_data_1}, {sb_data_0}};
  wire [3:0][4:0]  _GEN_1 =
    {{sb_mem_type_3}, {sb_mem_type_2}, {sb_mem_type_1}, {sb_mem_type_0}};
  wire [3:0][3:0]  _GEN_2 = {{sb_wstrb_3}, {sb_wstrb_2}, {sb_wstrb_1}, {sb_wstrb_0}};
  wire [3:0]       _GEN_3 = _GEN_2[head];
  wire [3:0]       _GEN_4 =
    {{sb_uncache_3}, {sb_uncache_2}, {sb_uncache_1}, {sb_uncache_0}};
  wire [1:0]       _offset_T_5 = _GEN_3[1] ? 2'h1 : {1'h1, ~(_GEN_3[2])};
  wire [1:0]       offset = _GEN_3[0] ? 2'h0 : _offset_T_5;
  wire             io_full_0 = elem_num == 3'h4 | flush_reg;
  reg  [31:0]      sb_order_reg_data_0;
  reg  [31:0]      sb_order_reg_data_1;
  reg  [31:0]      sb_order_reg_data_2;
  reg  [31:0]      sb_order_reg_data_3;
  reg  [3:0]       ld_hit_mask;
  reg  [3:0]       ld_hit_index;
  wire [31:0]      _hit_byte_T_4 = ld_hit_index[0] ? sb_order_reg_data_0 : 32'h0;
  wire [31:0]      _hit_byte_T_5 = ld_hit_index[1] ? sb_order_reg_data_1 : 32'h0;
  wire [31:0]      _hit_byte_T_6 = ld_hit_index[2] ? sb_order_reg_data_2 : 32'h0;
  wire [31:0]      _hit_byte_T_7 = ld_hit_index[3] ? sb_order_reg_data_3 : 32'h0;
  reg  [1:0]       hit_byte_r;
  wire [31:0]      hit_byte =
    (_hit_byte_T_4 | _hit_byte_T_5 | _hit_byte_T_6 | _hit_byte_T_7)
    >> {27'h0, hit_byte_r, 3'h0};
  reg              ld_hit_data_0_r;
  wire [7:0]       _ld_hit_data_0_T_1 = ld_hit_data_0_r ? hit_byte[7:0] : 8'h0;
  reg              io_ld_hit_0_r;
  reg  [3:0]       ld_hit_index_1;
  wire [31:0]      _hit_byte_T_18 = ld_hit_index_1[0] ? sb_order_reg_data_0 : 32'h0;
  wire [31:0]      _hit_byte_T_19 = ld_hit_index_1[1] ? sb_order_reg_data_1 : 32'h0;
  wire [31:0]      _hit_byte_T_20 = ld_hit_index_1[2] ? sb_order_reg_data_2 : 32'h0;
  wire [31:0]      _hit_byte_T_21 = ld_hit_index_1[3] ? sb_order_reg_data_3 : 32'h0;
  reg  [1:0]       hit_byte_r_1;
  wire [31:0]      hit_byte_1 =
    (_hit_byte_T_18 | _hit_byte_T_19 | _hit_byte_T_20 | _hit_byte_T_21)
    >> {27'h0, hit_byte_r_1, 3'h0};
  reg              ld_hit_data_1_r;
  wire [7:0]       _ld_hit_data_1_T_1 = ld_hit_data_1_r ? hit_byte_1[7:0] : 8'h0;
  reg              io_ld_hit_1_r;
  reg  [3:0]       ld_hit_index_2;
  wire [31:0]      _hit_byte_T_32 = ld_hit_index_2[0] ? sb_order_reg_data_0 : 32'h0;
  wire [31:0]      _hit_byte_T_33 = ld_hit_index_2[1] ? sb_order_reg_data_1 : 32'h0;
  wire [31:0]      _hit_byte_T_34 = ld_hit_index_2[2] ? sb_order_reg_data_2 : 32'h0;
  wire [31:0]      _hit_byte_T_35 = ld_hit_index_2[3] ? sb_order_reg_data_3 : 32'h0;
  reg  [1:0]       hit_byte_r_2;
  wire [31:0]      hit_byte_2 =
    (_hit_byte_T_32 | _hit_byte_T_33 | _hit_byte_T_34 | _hit_byte_T_35)
    >> {27'h0, hit_byte_r_2, 3'h0};
  reg              ld_hit_data_2_r;
  wire [7:0]       _ld_hit_data_2_T_1 = ld_hit_data_2_r ? hit_byte_2[7:0] : 8'h0;
  reg              io_ld_hit_2_r;
  reg  [3:0]       ld_hit_index_3;
  wire [31:0]      _hit_byte_T_46 = ld_hit_index_3[0] ? sb_order_reg_data_0 : 32'h0;
  wire [31:0]      _hit_byte_T_47 = ld_hit_index_3[1] ? sb_order_reg_data_1 : 32'h0;
  wire [31:0]      _hit_byte_T_48 = ld_hit_index_3[2] ? sb_order_reg_data_2 : 32'h0;
  wire [31:0]      _hit_byte_T_49 = ld_hit_index_3[3] ? sb_order_reg_data_3 : 32'h0;
  reg  [1:0]       hit_byte_r_3;
  wire [31:0]      hit_byte_3 =
    (_hit_byte_T_46 | _hit_byte_T_47 | _hit_byte_T_48 | _hit_byte_T_49)
    >> {27'h0, hit_byte_r_3, 3'h0};
  reg              ld_hit_data_3_r;
  wire [7:0]       _ld_hit_data_3_T_1 = ld_hit_data_3_r ? hit_byte_3[7:0] : 8'h0;
  reg              io_ld_hit_3_r;
  wire [1:0]       _start_T = 2'(head + wait_num[1:0]);
  wire [2:0]       _clear_num_T = 3'(elem_num - wait_num);
  wire [1:0]       clear_idx_1 = 2'(_start_T + 2'h1);
  wire             _GEN_5 =
    (|(_clear_num_T[2:1])) & clear_idx_1 == 2'h0 | (|_clear_num_T) & _start_T == 2'h0;
  wire             _GEN_6 =
    (|(_clear_num_T[2:1])) & clear_idx_1 == 2'h1 | (|_clear_num_T) & _start_T == 2'h1;
  wire             _GEN_7 =
    (|(_clear_num_T[2:1])) & clear_idx_1 == 2'h2 | (|_clear_num_T) & _start_T == 2'h2;
  wire             _GEN_8 =
    (|(_clear_num_T[2:1])) & (&clear_idx_1) | (|_clear_num_T) & (&_start_T);
  wire [1:0]       clear_idx_2 = 2'(_start_T - 2'h2);
  wire             _GEN_9 = _clear_num_T > 3'h2;
  wire             _GEN_10 = _GEN_9 & clear_idx_2 == 2'h0;
  wire             _GEN_11 = _GEN_9 & clear_idx_2 == 2'h1;
  wire             _GEN_12 = _GEN_9 & clear_idx_2 == 2'h2;
  wire             _GEN_13 = _GEN_9 & (&clear_idx_2);
  wire [1:0]       clear_idx_3 = 2'(_start_T - 2'h1);
  wire             _GEN_14 =
    _clear_num_T[2] ? clear_idx_3 == 2'h0 | _GEN_10 | _GEN_5 : _GEN_10 | _GEN_5;
  wire             _GEN_15 =
    _clear_num_T[2] ? clear_idx_3 == 2'h1 | _GEN_11 | _GEN_6 : _GEN_11 | _GEN_6;
  wire             _GEN_16 =
    _clear_num_T[2] ? clear_idx_3 == 2'h2 | _GEN_12 | _GEN_7 : _GEN_12 | _GEN_7;
  wire             _GEN_17 =
    _clear_num_T[2] ? (&clear_idx_3) | _GEN_13 | _GEN_8 : _GEN_13 | _GEN_8;
  wire             _GEN_18 = ~flush_reg & io_mem_type_ex[2];
  wire [31:0]      _sb_addr_T_1 = {io_addr_ex[31:2], 2'h0};
  wire             _GEN_19 = _GEN_18 & tail == 2'h0;
  wire             _GEN_20 = flush_reg | ~_GEN_19;
  wire             _GEN_21 = _GEN_18 & tail == 2'h1;
  wire             _GEN_22 = flush_reg | ~_GEN_21;
  wire             _GEN_23 = _GEN_18 & tail == 2'h2;
  wire             _GEN_24 = flush_reg | ~_GEN_23;
  wire             _GEN_25 = _GEN_18 & (&tail);
  wire             _GEN_26 = flush_reg | ~_GEN_25;
  wire [62:0]      _sb_data_T_2 =
    {31'h0, io_st_data_ex} << {58'h0, io_addr_ex[1:0], 3'h0};
  wire [18:0]      _sb_wstrb_T_6 =
    {3'h0, 16'((16'h1 << (4'h1 << io_mem_type_ex[1:0])) - 16'h1)} << io_addr_ex[1:0];
  wire [3:0]       _GEN_27 = {2'h0, io_mem_type_ex[1:0]};
  wire [15:0]      _ld_mask_T_2 = 16'h1 << (4'h1 << _GEN_27);
  wire [3:0]       _ld_mask_T_3 = 4'(_ld_mask_T_2[3:0] - 4'h1);
  wire [1:0]       _sb_order_T_12 = 2'(tail - 2'h1);
  wire [1:0]       _sb_order_T_6 = 2'(tail - 2'h2);
  wire [1:0]       _sb_order_T_10 = 2'(tail + 2'h1);
  wire [3:0]       sb_order_wstrb_3 = _GEN_2[tail];
  wire             ld_hit_temp_0 =
    (_GEN[_sb_order_T_12][31:2] ^ io_addr_ex[31:2]) == 30'h0;
  wire             ld_hit_temp_1 =
    (_GEN[_sb_order_T_6][31:2] ^ io_addr_ex[31:2]) == 30'h0;
  wire             ld_hit_temp_2 =
    (_GEN[_sb_order_T_10][31:2] ^ io_addr_ex[31:2]) == 30'h0;
  wire             ld_hit_temp_3 = (_GEN[tail][31:2] ^ io_addr_ex[31:2]) == 30'h0;
  wire [3:0]       _GEN_28 = {2'h0, io_addr_ex[1:0]};
  wire [3:0]       _ld_hit_T_1 = _GEN_2[_sb_order_T_12] >> _GEN_28;
  wire             ld_hit_0 = ld_hit_temp_0 & _ld_hit_T_1[0];
  wire [3:0]       _ld_hit_T_5 = _GEN_2[_sb_order_T_6] >> _GEN_28;
  wire             ld_hit_1 = ld_hit_temp_1 & _ld_hit_T_5[0];
  wire [3:0]       _ld_hit_T_9 = _GEN_2[_sb_order_T_10] >> _GEN_28;
  wire             ld_hit_2 = ld_hit_temp_2 & _ld_hit_T_9[0];
  wire [3:0]       _ld_hit_T_13 = sb_order_wstrb_3 >> _GEN_28;
  wire             ld_hit_3 = ld_hit_temp_3 & _ld_hit_T_13[0];
  wire             ld_bit_hit =
    (|{ld_hit_3, ld_hit_2, ld_hit_1, ld_hit_0}) & _ld_mask_T_3[0];
  wire [1:0]       _addr_mem_T_7 = 2'(io_addr_ex[1:0] + 2'h1);
  wire [3:0]       _GEN_29 = {2'h0, _addr_mem_T_7};
  wire [3:0]       _ld_hit_T_17 = _GEN_2[_sb_order_T_12] >> _GEN_29;
  wire             ld_hit_1_0 = ld_hit_temp_0 & _ld_hit_T_17[0];
  wire [3:0]       _ld_hit_T_21 = _GEN_2[_sb_order_T_6] >> _GEN_29;
  wire             ld_hit_1_1 = ld_hit_temp_1 & _ld_hit_T_21[0];
  wire [3:0]       _ld_hit_T_25 = _GEN_2[_sb_order_T_10] >> _GEN_29;
  wire             ld_hit_1_2 = ld_hit_temp_2 & _ld_hit_T_25[0];
  wire [3:0]       _ld_hit_T_29 = sb_order_wstrb_3 >> _GEN_29;
  wire             ld_hit_1_3 = ld_hit_temp_3 & _ld_hit_T_29[0];
  wire             ld_bit_hit_1 =
    (|{ld_hit_1_3, ld_hit_1_2, ld_hit_1_1, ld_hit_1_0}) & _ld_mask_T_3[1];
  wire [1:0]       _addr_mem_T_12 = 2'(io_addr_ex[1:0] - 2'h2);
  wire [3:0]       _GEN_30 = {2'h0, _addr_mem_T_12};
  wire [3:0]       _ld_hit_T_33 = _GEN_2[_sb_order_T_12] >> _GEN_30;
  wire             ld_hit_2_0 = ld_hit_temp_0 & _ld_hit_T_33[0];
  wire [3:0]       _ld_hit_T_37 = _GEN_2[_sb_order_T_6] >> _GEN_30;
  wire             ld_hit_2_1 = ld_hit_temp_1 & _ld_hit_T_37[0];
  wire [3:0]       _ld_hit_T_41 = _GEN_2[_sb_order_T_10] >> _GEN_30;
  wire             ld_hit_2_2 = ld_hit_temp_2 & _ld_hit_T_41[0];
  wire [3:0]       _ld_hit_T_45 = sb_order_wstrb_3 >> _GEN_30;
  wire             ld_hit_2_3 = ld_hit_temp_3 & _ld_hit_T_45[0];
  wire             ld_bit_hit_2 =
    (|{ld_hit_2_3, ld_hit_2_2, ld_hit_2_1, ld_hit_2_0}) & _ld_mask_T_3[2];
  wire [1:0]       _addr_mem_T_17 = 2'(io_addr_ex[1:0] - 2'h1);
  wire [3:0]       _GEN_31 = {2'h0, _addr_mem_T_17};
  wire [3:0]       _ld_hit_T_49 = _GEN_2[_sb_order_T_12] >> _GEN_31;
  wire             ld_hit_3_0 = ld_hit_temp_0 & _ld_hit_T_49[0];
  wire [3:0]       _ld_hit_T_53 = _GEN_2[_sb_order_T_6] >> _GEN_31;
  wire             ld_hit_3_1 = ld_hit_temp_1 & _ld_hit_T_53[0];
  wire [3:0]       _ld_hit_T_57 = _GEN_2[_sb_order_T_10] >> _GEN_31;
  wire             ld_hit_3_2 = ld_hit_temp_2 & _ld_hit_T_57[0];
  wire [3:0]       _ld_hit_T_61 = sb_order_wstrb_3 >> _GEN_31;
  wire             ld_hit_3_3 = ld_hit_temp_3 & _ld_hit_T_61[0];
  wire             ld_bit_hit_3 =
    (|{ld_hit_3_3, ld_hit_3_2, ld_hit_3_1, ld_hit_3_0}) & _ld_mask_T_3[3];
  wire [18:0]      _ld_hit_mask_T_3 = 19'hF << (4'h1 << _GEN_27);
  wire [3:0]       _ld_hit_index_T_6 = ld_hit_2 ? 4'h4 : {ld_hit_3, 3'h0};
  wire [3:0]       _ld_hit_index_T_7 = ld_hit_1 ? 4'h2 : _ld_hit_index_T_6;
  wire [3:0]       _ld_hit_index_T_16 = ld_hit_1_2 ? 4'h4 : {ld_hit_1_3, 3'h0};
  wire [3:0]       _ld_hit_index_T_17 = ld_hit_1_1 ? 4'h2 : _ld_hit_index_T_16;
  wire [3:0]       _ld_hit_index_T_26 = ld_hit_2_2 ? 4'h4 : {ld_hit_2_3, 3'h0};
  wire [3:0]       _ld_hit_index_T_27 = ld_hit_2_1 ? 4'h2 : _ld_hit_index_T_26;
  wire [3:0]       _ld_hit_index_T_36 = ld_hit_3_2 ? 4'h4 : {ld_hit_3_3, 3'h0};
  wire [3:0]       _ld_hit_index_T_37 = ld_hit_3_1 ? 4'h2 : _ld_hit_index_T_36;
  always @(posedge clock) begin
    if (reset) begin
      sb_addr_0 <= 32'h0;
      sb_addr_1 <= 32'h0;
      sb_addr_2 <= 32'h0;
      sb_addr_3 <= 32'h0;
      sb_data_0 <= 32'h0;
      sb_data_1 <= 32'h0;
      sb_data_2 <= 32'h0;
      sb_data_3 <= 32'h0;
      sb_mem_type_0 <= 5'h0;
      sb_mem_type_1 <= 5'h0;
      sb_mem_type_2 <= 5'h0;
      sb_mem_type_3 <= 5'h0;
      sb_wstrb_0 <= 4'h0;
      sb_wstrb_1 <= 4'h0;
      sb_wstrb_2 <= 4'h0;
      sb_wstrb_3 <= 4'h0;
      sb_uncache_0 <= 1'h0;
      sb_uncache_1 <= 1'h0;
      sb_uncache_2 <= 1'h0;
      sb_uncache_3 <= 1'h0;
      head <= 2'h0;
      tail <= 2'h0;
      wait_num <= 3'h0;
      elem_num <= 3'h0;
      flush_reg <= 1'h0;
    end
    else begin
      if (_GEN_20) begin
      end
      else
        sb_addr_0 <= _sb_addr_T_1;
      if (_GEN_22) begin
      end
      else
        sb_addr_1 <= _sb_addr_T_1;
      if (_GEN_24) begin
      end
      else
        sb_addr_2 <= _sb_addr_T_1;
      if (_GEN_26) begin
      end
      else
        sb_addr_3 <= _sb_addr_T_1;
      if (_GEN_20) begin
      end
      else
        sb_data_0 <= _sb_data_T_2[31:0];
      if (_GEN_22) begin
      end
      else
        sb_data_1 <= _sb_data_T_2[31:0];
      if (_GEN_24) begin
      end
      else
        sb_data_2 <= _sb_data_T_2[31:0];
      if (_GEN_26) begin
      end
      else
        sb_data_3 <= _sb_data_T_2[31:0];
      if (_GEN_20) begin
      end
      else
        sb_mem_type_0 <= io_mem_type_ex;
      if (_GEN_22) begin
      end
      else
        sb_mem_type_1 <= io_mem_type_ex;
      if (_GEN_24) begin
      end
      else
        sb_mem_type_2 <= io_mem_type_ex;
      if (_GEN_26) begin
      end
      else
        sb_mem_type_3 <= io_mem_type_ex;
      if (flush_reg) begin
        if (_GEN_14)
          sb_wstrb_0 <= 4'h0;
        if (_GEN_15)
          sb_wstrb_1 <= 4'h0;
        if (_GEN_16)
          sb_wstrb_2 <= 4'h0;
        if (_GEN_17)
          sb_wstrb_3 <= 4'h0;
      end
      else begin
        if (_GEN_19)
          sb_wstrb_0 <= _sb_wstrb_T_6[3:0];
        if (_GEN_21)
          sb_wstrb_1 <= _sb_wstrb_T_6[3:0];
        if (_GEN_23)
          sb_wstrb_2 <= _sb_wstrb_T_6[3:0];
        if (_GEN_25)
          sb_wstrb_3 <= _sb_wstrb_T_6[3:0];
      end
      if (_GEN_20) begin
      end
      else
        sb_uncache_0 <= io_uncache_ex;
      if (_GEN_22) begin
      end
      else
        sb_uncache_1 <= io_uncache_ex;
      if (_GEN_24) begin
      end
      else
        sb_uncache_2 <= io_uncache_ex;
      if (_GEN_26) begin
      end
      else
        sb_uncache_3 <= io_uncache_ex;
      head <= 2'(head + {1'h0, (|wait_num) & ~io_dcache_miss});
      if (flush_reg & ~(|wait_num))
        tail <= 2'(head + {1'h0, (|wait_num) & ~io_dcache_miss});
      else
        tail <= 2'(tail + {1'h0, io_mem_type_ex[2]});
      wait_num <=
        3'(3'(wait_num + {1'h0, io_st_num}) - {2'h0, (|wait_num) & ~io_dcache_miss});
      if (flush_reg & ~(|wait_num))
        elem_num <= 3'h0;
      else
        elem_num <=
          3'(3'(elem_num - {2'h0, (|wait_num) & ~io_dcache_miss})
             + {2'h0, io_mem_type_ex[2] & ~io_full_0});
      flush_reg <= io_flush | (|wait_num) & flush_reg;
    end
    if (io_em_stall) begin
    end
    else begin
      sb_order_reg_data_0 <= _GEN_0[_sb_order_T_12];
      sb_order_reg_data_1 <= _GEN_0[_sb_order_T_6];
      sb_order_reg_data_2 <= _GEN_0[_sb_order_T_10];
      sb_order_reg_data_3 <= _GEN_0[tail];
      ld_hit_mask <= io_mem_type_ex[2] ? 4'hF : _ld_hit_mask_T_3[3:0];
      ld_hit_index <= ld_hit_0 ? 4'h1 : _ld_hit_index_T_7;
      hit_byte_r <= io_addr_ex[1:0];
      ld_hit_data_0_r <= ld_bit_hit;
      io_ld_hit_0_r <= ld_bit_hit;
      ld_hit_index_1 <= ld_hit_1_0 ? 4'h1 : _ld_hit_index_T_17;
      hit_byte_r_1 <= _addr_mem_T_7;
      ld_hit_data_1_r <= ld_bit_hit_1;
      io_ld_hit_1_r <= ld_bit_hit_1;
      ld_hit_index_2 <= ld_hit_2_0 ? 4'h1 : _ld_hit_index_T_27;
      hit_byte_r_2 <= _addr_mem_T_12;
      ld_hit_data_2_r <= ld_bit_hit_2;
      io_ld_hit_2_r <= ld_bit_hit_2;
      ld_hit_index_3 <= ld_hit_3_0 ? 4'h1 : _ld_hit_index_T_37;
      hit_byte_r_3 <= _addr_mem_T_17;
      ld_hit_data_3_r <= ld_bit_hit_3;
      io_ld_hit_3_r <= ld_bit_hit_3;
    end
  end // always @(posedge)
  assign io_full = io_full_0;
  assign io_data_out = _GEN_0[head] >> {27'h0, offset, 3'h0};
  assign io_addr_out = 32'(_GEN[head] + {30'h0, offset});
  assign io_uncache_out = _GEN_4[head];
  assign io_mem_type_out = _GEN_1[head];
  assign io_wb_valid = |wait_num;
  assign io_ld_data_mem =
    {_ld_hit_data_3_T_1, _ld_hit_data_2_T_1, _ld_hit_data_1_T_1, _ld_hit_data_0_T_1};
  assign io_ld_hit_0 = ld_hit_mask[0] | io_ld_hit_0_r;
  assign io_ld_hit_1 = ld_hit_mask[1] | io_ld_hit_1_r;
  assign io_ld_hit_2 = ld_hit_mask[2] | io_ld_hit_2_r;
  assign io_ld_hit_3 = ld_hit_mask[3] | io_ld_hit_3_r;
endmodule

